parameters:
  - name: environmentName 
    type: string 

  - name: serviceConnectionName 
    type: string 

  - name: subscriptionId 
    type: string 

  - name: resourceGroupName 
    type: string 

  - name: dataFactoryName 
    type: string 

  - name: artifactName
    type: string
    default: data-factory

  - name: overrideParameters
    type: string
    default: 

jobs:
  - deployment: ${{ parameters.environmentName }}
    displayName: Deployment to ${{ parameters.environmentName }}
    variables:
      - name: artifactsDirectory
        value: $(System.ArtifactsDirectory)\data-factory
    environment: '${{ parameters.environmentName }}'
    strategy:
      runOnce:
        deploy:
          steps:
            - script: echo Deploying to ${{ parameters.environmentName }}
              displayName: 'Script - Display Environment Stage Name'
            
            - task: DownloadPipelineArtifact@2
              displayName: 'Download ADF ARM Template'
              inputs:
                source: current
                artifact: ${{ parameters.artifactName }}
                downloadPath: $(artifactsDirectory)

            - script: 'dir $(artifactsDirectory)'
              displayName: 'List Artifact contents (Windows)'

            - task: PowerShell@2
              displayName: 'üåç Inject Resolve-Error globally'
              inputs:
                targetType: inline
                pwsh: true
                script: |
                  if (-not (Get-Command Resolve-Error -ErrorAction SilentlyContinue)) {
                    function Resolve-Error {
                      Write-Host "üåê Resolve-Error fallback activated:"
                      $Error[0] | Format-List * -Force
                    }
                  }

            - task: AzurePowerShell@5
              displayName: 'Stop Triggers'
              inputs:
                azureSubscription: '${{ parameters.serviceConnectionName }}'
                ScriptPath: '$(artifactsDirectory)/PrePostDeploymentScript.ps1'
                ScriptArguments: "-armTemplate $(artifactsDirectory)/ARMTemplateForFactory.json \
                  -ResourceGroupName ${{ parameters.resourceGroupName }} \
                  -DataFactoryName  ${{ parameters.dataFactoryName }} \
                  -predeployment $true \
                  -deleteDeployment $false"
                azurePowerShellVersion: LatestVersion
                pwsh: true

            - task: AzureResourceManagerTemplateDeployment@3
              displayName: 'ARM Template deployment'
              inputs:
                azureResourceManagerConnection: '${{ parameters.serviceConnectionName }}'
                subscriptionId: '${{ parameters.subscriptionId }}'
                resourceGroupName: '${{ parameters.resourceGroupName }}'
                location: 'Southeast Asia'
                csmFile: '$(artifactsDirectory)/ARMTemplateForFactory.json'
                csmParametersFile: '$(artifactsDirectory)/ARMTemplateParametersForFactory.json'
                overrideParameters: >
                  -factoryName ${{ parameters.dataFactoryName }}
                  ${{ parameters.overrideParameters }}

            - task: PowerShell@2
              displayName: 'üåç Inject Resolve-Error globally'
              inputs:
                targetType: inline
                pwsh: true
                script: |
                  if (-not (Get-Command Resolve-Error -ErrorAction SilentlyContinue)) {
                    function Resolve-Error {
                      Write-Host "üåê Resolve-Error fallback activated:"
                      $Error[0] | Format-List * -Force
                    }
                  }
                        
            - task: AzurePowerShell@5
              displayName: 'Start Triggers'
              inputs:
                azureSubscription: '${{ parameters.serviceConnectionName }}'
                ScriptPath: '$(artifactsDirectory)/PrePostDeploymentScript.ps1'
                ScriptArguments: "-armTemplate $(artifactsDirectory)/ARMTemplateForFactory.json \
                  -ResourceGroupName ${{ parameters.resourceGroupName }} \
                  -DataFactoryName ${{ parameters.dataFactoryName }} \
                  -predeployment $false \
                  -deleteDeployment $false"
                azurePowerShellVersion: LatestVersion
                pwsh: true